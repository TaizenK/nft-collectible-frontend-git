{"ast":null,"code":"var _jsxFileName = \"/Users/itounobuhiro/unchain/Polygon-Generative-NFT/nft-cllectible-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport './App.css';\nimport contract from \"./contracts/NFTCollectible.json\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"0x10f69DBbCd82Bb4F5EFFa5c0d2B36Ed33B6e8675\";\nconst abi = contract.abi;\nconst headerPicture = new URL('../headerimg.jpg', import.meta.url);\nconst TWITTER_HANDLE = \"itoukatyo\";\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nfunction App() {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState(null);\n\n  const checkWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have MetaMask installed!\");\n      return;\n    } else {\n      console.log(\"Wallet exists! We're ready to go!\");\n    }\n\n    const accounts = await ethereum.request({\n      method: \"eth_accounts\"\n    });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account: \", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  };\n\n  const connectWalletHandler = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      alert(\"Please install MetaMask!\");\n    }\n\n    try {\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Found an account! Address: \", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const mintNftHandler = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const nftContract = new ethers.Contract(contractAddress, abi, signer);\n        console.log(\"Initialize payment\");\n        let nftTxn = await nftContract.mintNFTs(1, {\n          value: ethers.utils.parseEther(\"0.01\")\n        });\n        console.log(\"Mining... please wait\");\n        await nftTxn.wait();\n        console.log(\"`Mined, see transaction: ${nftTxn.hash}`\");\n      } else {\n        console.log(\"Ethereum object does not exist\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const connectWalletButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWalletHandler,\n      className: \"cta-button connect-wallet-button\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  };\n\n  const mintNftButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: mintNftHandler,\n      className: \"cta-button mint-nft-button\",\n      children: \"Mint NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this);\n  };\n\n  useEffect(() => {\n    checkWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: headerPicture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Scrappy Squirrels Tutorial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: currentAccount ? mintNftButton() : connectWalletButton()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"underLogo\",\n        children: [\"For studying with UNCHAIN\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-link\",\n          href: TWITTER_LINK,\n          children: `built on @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"vg9h9hqTAVJVjklrPXRRIAqzLN0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","contract","ethers","contractAddress","abi","headerPicture","URL","import","meta","url","TWITTER_HANDLE","TWITTER_LINK","App","currentAccount","setCurrentAccount","checkWalletIsConnected","ethereum","window","console","log","accounts","request","method","length","account","connectWalletHandler","alert","err","mintNftHandler","provider","providers","Web3Provider","signer","getSigner","nftContract","Contract","nftTxn","mintNFTs","value","utils","parseEther","wait","connectWalletButton","mintNftButton"],"sources":["/Users/itounobuhiro/unchain/Polygon-Generative-NFT/nft-cllectible-frontend/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport './App.css';\nimport contract from \"./contracts/NFTCollectible.json\";\nimport { ethers } from \"ethers\";\n\nconst contractAddress = \"0x10f69DBbCd82Bb4F5EFFa5c0d2B36Ed33B6e8675\";\n\nconst abi = contract.abi;\n\nconst headerPicture = new URL('../headerimg.jpg',import.meta.url);\n\nconst TWITTER_HANDLE = \"itoukatyo\";\n\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nfunction App() {\n  const [currentAccount, setCurrentAccount] = useState(null);\n\n  const checkWalletIsConnected = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have MetaMask installed!\");\n      return;\n    } else {\n      console.log(\"Wallet exists! We're ready to go!\");\n    }\n\n    const accounts = await ethereum.request({ method: \"eth_accounts\" });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account: \", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  };\n\n  const connectWalletHandler = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      alert(\"Please install MetaMask!\");\n    }\n\n    try {\n      const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n      console.log(\"Found an account! Address: \", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const mintNftHandler = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const nftContract = new ethers.Contract(contractAddress, abi, signer);\n\n        console.log(\"Initialize payment\");\n        let nftTxn = await nftContract.mintNFTs(1, {\n          value: ethers.utils.parseEther(\"0.01\"),\n        });\n\n        console.log(\"Mining... please wait\");\n        await nftTxn.wait();\n\n        console.log(\"`Mined, see transaction: ${nftTxn.hash}`\");\n      } else {\n        console.log(\"Ethereum object does not exist\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const connectWalletButton = () => {\n    return (\n      <button onClick={connectWalletHandler} className=\"cta-button connect-wallet-button\">\n        Connect Wallet\n      </button>\n    );\n  };\n\n\nconst mintNftButton = () => {\n  return (\n    <button onClick={mintNftHandler} className=\"cta-button mint-nft-button\">\n      Mint NFT\n    </button>\n  );\n};\n\nuseEffect(() => {\n  checkWalletIsConnected();\n},[]);\n\nreturn (\n  <div>\n    <div className=\"header\">\n      <img src={headerPicture} />\n    </div>\n    <div className=\"main-app\">\n      <h1>Scrappy Squirrels Tutorial</h1>\n      <div>{currentAccount ? mintNftButton() : connectWalletButton()}</div>\n    </div>\n    <div className='footer'>\n      <div className='underLogo'>\n        For studying with UNCHAIN\n        <br/>\n        <a className=\"footer-link\" href={TWITTER_LINK}>{`built on @${TWITTER_HANDLE}`}</a>\n      </div>\n    </div>\n  </div>\n);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}